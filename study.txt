2018-07-09 学习计划
---添加用户名和邮件的方法---
$ git config --global user.email "you@example.com"
$ git config --global user.name "Your Name"

---创建Git版本库管理目录---
$ mkdir learngit
$ cd learngit
$ pwd

---把这个目录变为Git可管理的版本库---
$ git init

---把文件添加到Git中，add后面为需要添加的文件，可多个、空格分隔---
$ git add readme.txt

---把文件提交到Git版本库中，引号中为本次版本说明---
$ git commit -m "添加用户名和邮箱的方法"

---Git status了解当前版本库的状态---
$ git status

---git diff命令查看当前版本和上个版本之间的差异---
$ git diff readme.txt

---版本修改后再提交仍然是2步---
$ git add readme.txt
$ git commit -m "版本说明"

---查看版本之前提交的文档的记录---
$ git log

---版本回退：HEAD表示当前版本，HEAD^表示上个版本，HEAD^^表示上上个版本，HEAD~100表示前100个版本---
$ git reset --hard HEAD^

---查看当前回退的版本信息---
$ cat readme.txt

---如果要恢复到还原前的版本，hard后面跟commit id---
$ git reset --hard 1094a

---若无法找到回退前的版本号，通过命令查看版本号，查到后用上个命令进行恢复---
$ git reflog

---查看文件状态---
$ git status

---管理修改：git管理的是修改，而不是文件，每次每个文件的修改记录---
---git diff HEAD -- readme.txt命令可以查看工作区和版本库里面最新版本的区别---
$ git diff HEAD -- readme.txt

---撤销修改：在没有add或commit之前，通过chekout 命令让文件回到最近一次Git commit或Git add---
$ git checkout -- readme.txt

---撤销后查看文件内容---
$ cat readme.txt

---将暂存区【Git add后】的修改撤销（UNstage）---
$ Git reset HEAD readme.txt

---从暂存区撤销修改后，再使用Git checkout命令丢弃工作区的修改【未Git add之前】
$ git checkout -- readme.txt

---删除文件：直接在文件管理器删除或使用rm命令删除---
$ rm test.txt

---从版本库中删除该文件，那就用命令git rm删掉，并且git commit，文件彻底删除，既删除工作区内容也删除暂存区内容---
$ git rm test.txt
$ git commit -m"remove test.txt"

---删错了，撤回（没有Git rm之前）---
$ git checkout -- test.txt

---本地仓库与远程库连接---
$ git remote add origin git@github.com:michaelliao/learngit.git

---远程版本库，将本地库的所有内容推送到远程库上---
$ git push -u origin master

---后面再次提交，通过以下命令---
$ git push origin master



